openapi: 3.0.0
info:
  title: API Ketahanan Pangan
  version: '1.0'
  description: Pembuatan API Ketahanan Pangan dalam rangka memenuhi keperluan Projek UAS mata kuliah Pembangunan Perangkat Lunak Berorientasi Service tahun 2023.
x-stoplight:
  id: pqiyad6b7dr4m
servers:
  - url: 'http://localhost:3000'
paths:
  /users:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: List of users retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pengguna'
      operationId: get-users
      description: Get list of users
    post:
      summary: ''
      operationId: post-users
      security:
        - basicAuth: []
      responses:
        '201':
          description: New users data created successfully
        '401':
          description: Unauthorized
      description: Create new users data
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pengguna'
  '/users/{userId}':
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: Users retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pengguna'
        '404':
          description: Not Found
      operationId: get-users-userId
      description: Get a user by ID
    put:
      summary: ''
      operationId: put-users-userId
      security:
        - basicAuth: []
      responses:
        '200':
          description: Users updated successfully
        '401':
          description: Unauthorized
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pengguna'
      description: Update a user by ID
    delete:
      summary: ''
      operationId: delete-users-userId
      security:
        - basicAuth: []
      responses:
        '200':
          description: A user deleted successfully
        '401':
          description: Unauthorized
      description: Delete a user
  /komoditas:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: List of komoditas retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Komoditas'
      operationId: get-komoditas
      description: Get list of komoditas
    post:
      summary: ''
      operationId: post-komoditas
      security:
        - basicAuth: []
      responses:
        '201':
          description: New komoditas data created successfully
        '401':
          description: Unauthorized
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Komoditas'
      description: Create komoditas (s)
  '/komoditas/{komoditas_id}':
    parameters:
      - schema:
          type: string
        name: komoditas_id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: A komoditas retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Komoditas'
        '404':
          description: Not Found
      operationId: get-komoditas-komoditas_id
      description: Get komoditas by ID
    put:
      summary: ''
      operationId: put-komoditas-komoditas_id
      security:
        - basicAuth: []
      responses:
        '200':
          description: A komoditas updated successfully
        '401':
          description: Unauthorized
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Komoditas'
      description: Update a komoditas by ID
    delete:
      summary: ''
      operationId: delete-komoditas-komoditas_id
      security:
        - basicAuth: []
      responses:
        '200':
          description: A komoditas deleted successfully
        '401':
          description: Unauthorized
      description: Delete a komoditas
  /komoditas/pemesanan:
    get:
      summary: Your GET endpoint
      tags: []
      operationId: get-komoditas-pemesanan
      description: Get list of pemesanan
      responses:
        '200':
          description: List of pemesanan retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pemesanan'
    post:
      summary: ''
      operationId: post-komoditas-pemesanan
      security:
        - basicAuth: []
      responses:
        '201':
          description: New pemesanan data created successfully
        '401':
          description: Unauthorized
      description: Create pemesanan (s)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pemesanan'
  '/komoditas/pemesanan/{order_id}':
    parameters:
      - schema:
          type: string
        name: order_id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: A pemesanan data retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pemesanan'
        '404':
          description: Not Found
      operationId: get-komoditas-pemesanan-order_id
      description: Get pemesanan by ID
    put:
      summary: ''
      operationId: put-komoditas-pemesanan-order_id
      security:
        - basicAuth: []
      responses:
        '200':
          description: A pemesanan updated successfully
        '401':
          description: Unauthorized
      description: Update a pemesanan by ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pemesanan'
    delete:
      summary: ''
      operationId: delete-komoditas-pemesanan-order_id
      security:
        - basicAuth: []
      responses:
        '200':
          description: A pemesanan deleted successfully
        '401':
          description: Unauthorized
      description: Delete a pemesanan
  /komoditas/pengemasan:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: List of pengemasan retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pengemasan'
      operationId: get-komoditas-pengemasan
      description: Get list of pengemasan
    post:
      summary: ''
      operationId: post-komoditas-pengemasan
      security:
        - basicAuth: []
      responses:
        '201':
          description: New pengemasan data created successfully
        '401':
          description: Unauthorized
      description: Create pengemasan (s)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pengemasan'
  '/komoditas/pengemasan/{order_id}':
    parameters:
      - schema:
          type: string
        name: order_id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: A pengemasan data retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pengemasan'
        '404':
          description: Not Found
      operationId: get-komoditas-pengemasan-order_id
      description: Get pengemasan by ID
    put:
      summary: ''
      operationId: put-komoditas-pengemasan-order_id
      security:
        - basicAuth: []
      responses:
        '200':
          description: A pengemasan updated successfully
        '401':
          description: Unauthorized
      description: Update a pengemasan by ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pengemasan'
    delete:
      summary: ''
      operationId: delete-komoditas-pengemasan-order_id
      security:
        - basicAuth: []
      responses:
        '200':
          description: A pengemasan deleted successfully
        '401':
          description: Unauthorized
      description: Delete a pengemasan
  /komoditas/pengiriman:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: List of pengiriman retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pengiriman'
      operationId: get-komoditas-pengiriman
      description: Get list of pengiriman
    post:
      summary: ''
      operationId: post-komoditas-pengiriman
      security:
        - basicAuth: []
      responses:
        '201':
          description: New pengiriman data created successfully
        '401':
          description: Unauthorized
      description: Create pengiriman (s)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pengiriman'
  '/komoditas/pengiriman/{order_id}':
    parameters:
      - schema:
          type: string
        name: order_id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: A pengiriman data retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pengiriman'
        '404':
          description: Not Found
      operationId: get-komoditas-pengiriman-order_id
      description: Get pengiriman by ID
    put:
      summary: ''
      operationId: put-komoditas-pengiriman-order_id
      security:
        - basicAuth: []
      responses:
        '200':
          description: A pengiriman updated successfully
      description: Update a pengiriman by ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pengiriman'
    delete:
      summary: ''
      operationId: delete-komoditas-pengiriman-order_id
      security:
        - basicAuth: []
      responses:
        '200':
          description: A pengiriman deleted successfully
        '401':
          description: Unauthorized
      description: Delete a pengiriman
  /komoditas/pembuangan:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: List of pembuangan retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pembuangan'
      operationId: get-komoditas-pembuangan
      description: Get list of pembuangan
    post:
      summary: ''
      operationId: post-komoditas-pembuangan
      security:
        - basicAuth: []
      responses:
        '201':
          description: New pembuangan data created successfully
        '401':
          description: Unauthorized
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pembuangan'
      description: Create pembuangan (s)
  '/komoditas/pembuangan/{order_id}':
    parameters:
      - schema:
          type: string
        name: order_id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: A pembuangan data retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pembuangan'
        '404':
          description: Not Found
      operationId: get-komoditas-pembuangan-order_id
      description: Get a pembuangan by ID
components:
  schemas:
    Komoditas:
      type: object
      properties:
        komoditas_id:
          type: integer
        nama:
          type: string
        kategori:
          type: string
        deskripsi:
          type: string
        gudang_komoditas:
          $ref: '#/components/schemas/GudangKomoditas'
        stok:
          type: integer
        nilai_pasar:
          type: integer
      title: ''
    GudangKomoditas:
      type: object
      properties:
        gudang_id:
          type: integer
        Nama:
          type: string
        Kategori:
          type: string
        Lokasi:
          type: string
    Pengguna:
      title: User
      type: object
      x-examples:
        Alice Smith:
          id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password
        dateOfBirth:
          type: string
          format: date
          example: '1997-10-31'
        emailVerified:
          type: boolean
          description: Set to true if the user's email has been verified.
        createDate:
          type: string
          format: date
          description: The date that the user was created.
      required:
        - id
        - firstName
        - lastName
        - email
        - password
        - emailVerified
    Pemesanan:
      type: object
      properties:
        order_id:
          type: integer
        nama_pemesan:
          type: string
        alamat_pemesan:
          type: string
        list_barang:
          type: array
          items:
            type: integer
        total_harga:
          type: integer
        status:
          type: string
    Pengemasan:
      type: object
      properties:
        order_id:
          type: integer
        nama_pemesan:
          type: string
        alamat_pemesan:
          type: string
        list_barang:
          type: array
          items:
            type: integer
        status:
          type: string
    Pengiriman:
      type: object
      properties:
        order_id:
          type: integer
        pengiriman_id:
          type: integer
        nama_pemesan:
          type: string
        alamat_pemesan:
          type: string
        list_barang:
          type: array
          items:
            type: integer
        status:
          type: string
    Pembuangan:
      type: object
      properties:
        id:
          type: integer
        list_barang:
          type: array
          items:
            type: integer
        alasan:
          type: array
          items:
            type: string
        status:
          type: string
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
