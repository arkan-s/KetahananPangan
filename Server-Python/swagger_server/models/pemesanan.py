# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Pemesanan(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, order_id: int=None, nama_pemesan: str=None, alamat_pemesan: str=None, list_barang: List[int]=None, total_harga: int=None, status: str=None):  # noqa: E501
        """Pemesanan - a model defined in Swagger

        :param order_id: The order_id of this Pemesanan.  # noqa: E501
        :type order_id: int
        :param nama_pemesan: The nama_pemesan of this Pemesanan.  # noqa: E501
        :type nama_pemesan: str
        :param alamat_pemesan: The alamat_pemesan of this Pemesanan.  # noqa: E501
        :type alamat_pemesan: str
        :param list_barang: The list_barang of this Pemesanan.  # noqa: E501
        :type list_barang: List[int]
        :param total_harga: The total_harga of this Pemesanan.  # noqa: E501
        :type total_harga: int
        :param status: The status of this Pemesanan.  # noqa: E501
        :type status: str
        """
        self.swagger_types = {
            'order_id': int,
            'nama_pemesan': str,
            'alamat_pemesan': str,
            'list_barang': List[int],
            'total_harga': int,
            'status': str
        }

        self.attribute_map = {
            'order_id': 'order_id',
            'nama_pemesan': 'nama_pemesan',
            'alamat_pemesan': 'alamat_pemesan',
            'list_barang': 'list_barang',
            'total_harga': 'total_harga',
            'status': 'status'
        }
        self._order_id = order_id
        self._nama_pemesan = nama_pemesan
        self._alamat_pemesan = alamat_pemesan
        self._list_barang = list_barang
        self._total_harga = total_harga
        self._status = status

    @classmethod
    def from_dict(cls, dikt) -> 'Pemesanan':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Pemesanan of this Pemesanan.  # noqa: E501
        :rtype: Pemesanan
        """
        return util.deserialize_model(dikt, cls)

    @property
    def order_id(self) -> int:
        """Gets the order_id of this Pemesanan.


        :return: The order_id of this Pemesanan.
        :rtype: int
        """
        return self._order_id

    @order_id.setter
    def order_id(self, order_id: int):
        """Sets the order_id of this Pemesanan.


        :param order_id: The order_id of this Pemesanan.
        :type order_id: int
        """

        self._order_id = order_id

    @property
    def nama_pemesan(self) -> str:
        """Gets the nama_pemesan of this Pemesanan.


        :return: The nama_pemesan of this Pemesanan.
        :rtype: str
        """
        return self._nama_pemesan

    @nama_pemesan.setter
    def nama_pemesan(self, nama_pemesan: str):
        """Sets the nama_pemesan of this Pemesanan.


        :param nama_pemesan: The nama_pemesan of this Pemesanan.
        :type nama_pemesan: str
        """

        self._nama_pemesan = nama_pemesan

    @property
    def alamat_pemesan(self) -> str:
        """Gets the alamat_pemesan of this Pemesanan.


        :return: The alamat_pemesan of this Pemesanan.
        :rtype: str
        """
        return self._alamat_pemesan

    @alamat_pemesan.setter
    def alamat_pemesan(self, alamat_pemesan: str):
        """Sets the alamat_pemesan of this Pemesanan.


        :param alamat_pemesan: The alamat_pemesan of this Pemesanan.
        :type alamat_pemesan: str
        """

        self._alamat_pemesan = alamat_pemesan

    @property
    def list_barang(self) -> List[int]:
        """Gets the list_barang of this Pemesanan.


        :return: The list_barang of this Pemesanan.
        :rtype: List[int]
        """
        return self._list_barang

    @list_barang.setter
    def list_barang(self, list_barang: List[int]):
        """Sets the list_barang of this Pemesanan.


        :param list_barang: The list_barang of this Pemesanan.
        :type list_barang: List[int]
        """

        self._list_barang = list_barang

    @property
    def total_harga(self) -> int:
        """Gets the total_harga of this Pemesanan.


        :return: The total_harga of this Pemesanan.
        :rtype: int
        """
        return self._total_harga

    @total_harga.setter
    def total_harga(self, total_harga: int):
        """Sets the total_harga of this Pemesanan.


        :param total_harga: The total_harga of this Pemesanan.
        :type total_harga: int
        """

        self._total_harga = total_harga

    @property
    def status(self) -> str:
        """Gets the status of this Pemesanan.


        :return: The status of this Pemesanan.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status: str):
        """Sets the status of this Pemesanan.


        :param status: The status of this Pemesanan.
        :type status: str
        """

        self._status = status
